{"version":3,"sources":["components/FirebaseAuth/firebase.js","components/FirebaseAuth/index.js","components/routers/PublicRouter/index.js","components/templates/PublicTemplate/index.js","libs/log/index.js","components/UserAvatar/index.js","components/menus/UserMenu/index.js","libs/user/index.js","components/menus/SidebarLink/index.js","components/menus/AppMenu/index.js","components/Loader/index.js","components/menus/AccountMenu/index.js","components/Logo/index.js","components/Breadcrumb/index.js","components/templates/AccountTemplate/index.js","components/templates/ActiveAccountTemplate/index.js","components/routers/AuthRouter/index.js","components/FirebaseUI/index.js","pages/public/SignIn/index.js","pages/auth/Home/index.js","pages/public/PageNotFound/index.js","components/templates/AppTemplate/index.js","components/user/UserProfileView/index.js","components/user/UserPageLayout/index.js","pages/auth/user/UserProfile/index.js","components/Form/Field.js","components/Form/Form.js","components/Form/Input.js","components/Alert/index.js","pages/auth/user/UpdateEmail/index.js","pages/auth/user/UpdateName/index.js","pages/auth/user/VerifyEmail/index.js","pages/auth/user/UpdatePassword/index.js","pages/auth/user/UpdatePhone/index.js","pages/auth/user/DeleteUser/index.js","pages/auth/user/ViewLogs/index.js","pages/auth/accounts/Plans/index.js","pages/auth/accounts/NewAccount/index.js","pages/auth/accounts/Overview/index.js","pages/auth/accounts/UserList/index.js","pages/auth/accounts/UserRole/index.js","pages/auth/accounts/AddUser/index.js","pages/auth/user/Invite/index.js","pages/auth/accounts/PaymentList/index.js","pages/auth/accounts/PaymentMethod/index.js","pages/auth/accounts/DeleteAccount/index.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseAuth","firebase","initializeApp","config","CloudFunctions","firestore","functions","AuthContext","React","createContext","AuthProvider","children","useState","authUser","setAuthUser","userData","setUserData","useEffect","auth","onAuthStateChanged","user","getIdToken","then","token","Provider","value","withRouter","Component","component","Template","template","Title","title","rest","document","render","matchProps","PublicTemplate","className","log","action","callback","Firestore","currentUser","dt","Date","data","collection","doc","uid","getTime","set","catch","err","UserAvatar","name","photoUrl","size","uiAvartarUrl","encodeURI","src","width","height","alt","UserMenu","Consumer","context","id","to","data-target","data-toggle","aria-haspopup","aria-expanded","displayName","photoURL","style","minWidth","onClick","e","preventDefault","result","signOut","SidebarLink","props","body","classList","contains","remove","add","AppMenu","querySelectorAll","forEach","element","window","coreui","Sidebar","_sidebarInterface","location","pathname","startsWith","Loader","Size","Text","text","AccountMenu","accountId","useParams","useContext","currentAccount","role","Logo","BreadcrumbContext","Breadcrumb","links","map","link","key","active","AccountTemplate","loading","setLoading","error","setError","isActive","setIsActive","breadcrumb","setBreadcrumb","account","get","exists","subscriptionStatus","owner","planId","plan","price","admins","indexOf","message","data-class","type","ActiveAccountTemplate","currency","paymentCycle","subscriptionCurrentPeriodEnd","checked","FirebaseUI","signInSuccess","setSignInSuccess","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","userDocRef","lastLoginTime","merge","console","creationTime","userSignIn","uiShown","getElementById","display","signInSuccessUrl","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","firebaseAuth","SignIn","Home","accounts","setAccounts","mountedRef","useRef","records","where","accountSnapshots","current","push","getAccounts","length","i","PageNotFound","AppTemplate","UserProfileView","href","email","emailVerified","phoneNumber","UserPageLayout","UserProfile","Field","label","Form","handleSubmit","disabled","inSubmit","enableDefaultButtons","submitBtnStyle","submitBtnText","backBtnText","backToUrl","others","btnClass","onSubmit","Input","hasError","validRegex","minLen","maxLen","required","changeHandler","hasErrorState","setHasErrorState","errorMessage","setErrorMessage","onChange","foundError","foundErrorMessage","target","trim","RegExp","test","Alert","dismissible","onDismiss","data-dismiss","aria-label","aria-hidden","UpdateEmail","emailAddress","setEmailAddress","password","setPassword","status","setResult","setInSubmit","credential","reauthenticateWithCredential","updateEmail","sendEmailVerification","UpdateName","fullname","setFullname","updateProfile","userUpdateName","readOnly","UpdatePassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updatePassword","UpdatePhone","setPhoneNumber","verificationCode","setVerificationCode","SUCCESS","FAILURE","PHONESTEP","VERIFYSTEP","recaptcha","createRef","recaptchaVerified","setRecaptchaVerified","verificationId","setVerificationId","recaptchaVerifier","RecaptchaVerifier","response","widgetId","recaptchaWidgetId","PhoneAuthProvider","verifyPhoneNumber","vid","ref","cred","updatePhoneNumber","DeleteUser","delete","ViewLogs","total","setTotal","qs","setQs","rows","setRows","count","setCount","getLogs","pageSize","lastDoc","query","orderBy","startAfter","limit","documentSnapshots","time","toDate","toLocaleString","concat","userDoc","activityCount","r","row","timestamp","docs","Plans","processing","setProcessing","plans","setPlans","selectedPlan","setSelectedPlan","cardError","setCardError","country","setCountry","countryError","setCountryError","state","setState","stateError","setStateError","planSnapShots","p","features","stripePriceId","ascendingOrderPlans","sort","a","b","parseFloat","subcribe","event","countries","states","httpsCallable","createSubscription","paymentMethodId","billing","res","feature","defaultValue","countryCode","selectedOptions","Object","keys","stateCode","NewAccount","accountName","setAccountName","redirect","setRedirect","createAccount","Overview","UserList","users","setUsers","getAccountUsers","record","charAt","toUpperCase","slice","toLocaleTimeString","toLocaleDateString","UserRole","userId","setUser","success","setSuccess","selectedRole","setSelectedRole","getAccountUser","updateAccountUserRole","AddUser","inviteDialog","setInviteDialog","inviteEmailToAccount","addUserToAccount","details","code","Invite","invite","setInvite","isSubscribed","getInvite","inviteId","acceptInvite","PaymentList","toEnd","setToEnd","getInvoices","empty","Math","round","toFixed","subTotal","tax","amountPaid","created","hostedInvoiceUrl","scope","rel","sign","PaymentMethod","updatePaymentMethod","DeleteAccount","cancelSubscription","App","exact","path","VerifyEmail","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92321304.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport \"firebase/auth\";\r\nimport \"firebase/functions\";\r\nimport {config} from './firebase-config';\r\n\r\nconst FirebaseAuth = firebase.initializeApp(config);\r\nconst Firestore = FirebaseAuth.firestore();\r\nconst CloudFunctions = FirebaseAuth.functions();\r\n\r\nexport {FirebaseAuth, Firestore, CloudFunctions}","import React, { useEffect, useState } from \"react\";\r\nimport { FirebaseAuth } from \"./firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [authUser, setAuthUser] = useState({\r\n      'user': null,\r\n      'checked': false\r\n    });\r\n\r\n    const [userData, setUserData] = useState({\r\n\r\n    })\r\n  \r\n    useEffect(() => {\r\n      FirebaseAuth.auth().onAuthStateChanged(function(user){\r\n        if(user !== null){\r\n          user.getIdToken().then(token => {\r\n            setAuthUser({\r\n              'user': user,\r\n              'checked': true\r\n            });\r\n          });\r\n        }else{\r\n          setAuthUser({\r\n            'user': null,\r\n            'checked': true\r\n          });\r\n        }\r\n      });\r\n    }, []);\r\n  \r\n    return (\r\n      <AuthContext.Provider\r\n        value={{\r\n          authUser, userData, setUserData\r\n        }}\r\n      >\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };","import React from 'react';  \r\nimport { Route, withRouter } from \"react-router-dom\";\r\n\r\nconst PublicRouter = ({component: Component, template: Template, title: Title, ...rest}) => {\r\n    \r\n    document.title = Title;\r\n    \r\n    return ( \r\n        <Route\r\n            {...rest}\r\n            render={ matchProps => (\r\n            <Template {...rest}>\r\n                <Component {...matchProps} />  \r\n            </Template>\r\n            )}\r\n        />\r\n    );\r\n}\r\nexport default withRouter(PublicRouter);","import React from \"react\";\r\n\r\nconst PublicTemplate = ({ children }) => {\r\n    return (\r\n\t\t<div className=\"c-app flex-row align-items-center\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"justify-content-center row\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default PublicTemplate;","import { FirebaseAuth } from \"../../components/FirebaseAuth/firebase\";\r\n\r\nexport const log = (action, callback) => {\r\n    const Firestore = FirebaseAuth.firestore();\r\n    const currentUser = FirebaseAuth.auth().currentUser;\r\n\r\n    const dt = new Date();\r\n    const data ={\r\n        'action': action,\r\n        'time': dt\r\n    }\r\n    const userDocRef = Firestore.collection('users').doc(currentUser.uid);\r\n    userDocRef.collection('activities').doc(''+dt.getTime()).set(data).then(() => {\r\n        if(callback){\r\n            callback(true);\r\n        }\r\n    }).catch(err => {\r\n        if(callback){\r\n            callback(false);\r\n        }\r\n    });\r\n}\r\nexport const SIGN_IN = 'signed in';\r\nexport const UPDATE_PASSWORD = 'changed password';\r\nexport const UPDATE_USERNAME = 'changed user name';\r\nexport const UPDATE_PHONE = 'changed phone number';\r\nexport const UPDATE_EMAIL = 'changed email address';\r\nexport const SIGN_OUT = 'signed out';","import React from \"react\";\r\n\r\nconst UserAvatar = ({name, photoUrl, className, size}) => {\r\n    const uiAvartarUrl = \"https://ui-avatars.com/api/?name=\"+encodeURI(name)+\"&background=007bff&size=64&color=f8f9fc\";\r\n    return(\r\n        \r\n        (!photoUrl)?(\r\n            <div className=\"c-avatar\">\r\n                <img src={uiAvartarUrl} className={className} width={size} height={size} alt={name} />\r\n            </div>\r\n        ):(\r\n            <div className=\"c-avatar\">\r\n                <img src={photoUrl} className={className} width={size} height={size} alt={name} />\r\n            </div>\r\n        )\r\n        \r\n    )\r\n}\r\n\r\nexport default UserAvatar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from '../../FirebaseAuth';\r\nimport { userSignOut } from '../../../libs/user';\r\nimport UserAvatar from '../../UserAvatar';\r\n\r\nconst UserMenu = () => {\r\n    return (\r\n        <>\r\n        <AuthContext.Consumer>\r\n            {(context) => (\r\n                <li className=\"c-header-nav-item dropdown\" id=\"user-menu\">\r\n                    <Link to=\"/\" data-target=\"#root\" className=\"c-header-nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <UserAvatar name={context.authUser.user.displayName} photoUrl={context.authUser.user.photoURL} className=\"c-avatar-img\" />\r\n                    </Link>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" style={{minWidth: '182px'}}>\r\n                        <Link className=\"dropdown-item\" to=\"/user/profile\">\r\n                            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                            Profile\r\n                        </Link>\r\n                        <Link className=\"dropdown-item\" to=\"/user/log\">\r\n                            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                            Activity Logs\r\n                        </Link>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <Link to=\"/\" data-target=\"#root\" className=\"dropdown-item\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            userSignOut();\r\n                        }}>\r\n                            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                            Sign Out\r\n                        </Link>\r\n                    </div>\r\n                </li>\r\n            )}\r\n        </AuthContext.Consumer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserMenu;","import { FirebaseAuth } from \"../../components/FirebaseAuth/firebase\";\r\nimport { log, SIGN_IN, SIGN_OUT, UPDATE_USERNAME } from '../log';\r\n\r\nexport const userSignIn = (callback) => {\r\n    var dt = new Date();\r\n    const Firestore = FirebaseAuth.firestore();\r\n    const currentUser = FirebaseAuth.auth().currentUser;\r\n    \r\n    const userDocRef = Firestore.collection('users').doc(currentUser.uid);\r\n    userDocRef.get().then(doc => {\r\n        if(doc.exists){\r\n            // update user document\r\n            userDocRef.set({\r\n                displayName: currentUser.displayName,\r\n                photoURL: currentUser.photoURL,\r\n                lastLoginTime: dt\r\n            },{merge: true}).then(() => {\r\n                \r\n                callback(true);\r\n            }).catch(err => {\r\n                console.log(err);\r\n                callback(false);\r\n            });\r\n        }else{\r\n            // create user document\r\n            userDocRef.set({\r\n                displayName: currentUser.displayName,\r\n                photoURL: currentUser.photoURL,\r\n                creationTime: dt,\r\n                lastLoginTime: dt\r\n            }).then(() => {\r\n                callback(true);\r\n            }).catch(err => {\r\n                console.log(err);\r\n                callback(false);\r\n            });\r\n        }\r\n    });\r\n    log(SIGN_IN);\r\n}\r\n\r\nexport const userSignOut = () => {\r\n    log(SIGN_OUT, (result) => {\r\n        // wait for log is successfully written before signing out\r\n        if(result){\r\n            FirebaseAuth.auth().signOut();\r\n        }\r\n    });   \r\n}\r\n\r\nexport const userUpdateName = () => {\r\n    const Firestore = FirebaseAuth.firestore();\r\n    const currentUser = FirebaseAuth.auth().currentUser;\r\n\r\n    const userDocRef = Firestore.collection('users').doc(currentUser.uid);\r\n    userDocRef.set({\r\n        displayName: currentUser.displayName\r\n    },{merge: true});\r\n    log(UPDATE_USERNAME);\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SidebarLink = (props) => {\r\n\r\n    return (\r\n        <Link {...props} onClick={() => {\r\n            if(document.body.classList.contains(\"sidebar-show\")){\r\n                document.body.classList.remove(\"sidebar-show\");\r\n            }else{\r\n                document.body.classList.add(\"sidebar-show\");\r\n            }\r\n        }} >\r\n            {props.children}\r\n        </Link>\r\n    )\r\n}\r\nexport default SidebarLink;","import React, { useEffect } from \"react\";\r\nimport SidebarLink from '../SidebarLink';\r\n\r\nconst AppMenu = () => {\r\n\r\n    useEffect(() => {\r\n        document.querySelectorAll('.c-sidebar').forEach(element => {\r\n            window.coreui.Sidebar._sidebarInterface(element)\r\n        });\r\n    })\r\n\r\n    return (\r\n\r\n            <ul className=\"c-sidebar-nav ps ps--active-y\">\r\n                <li className=\"c-sidebar-nav-title\">Application</li>\r\n                <li className=\"c-sidebar-nav-item\">\r\n                    <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname==='/'?\" active\":\"\")} to=\"/\">\r\n                        <i className=\"c-sidebar-nav-icon fa fa-th-large\"></i>My Accounts\r\n                    </SidebarLink>\r\n                </li>\r\n                <li className=\"c-sidebar-nav-title\">User</li>\r\n                <li className=\"c-sidebar-nav-item\">\r\n                    <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname.startsWith('/user/profile')?\" active\":\"\")} to=\"/user/profile\">\r\n                        <i className=\"c-sidebar-nav-icon fa fa-user\"></i> Profile\r\n                    </SidebarLink>\r\n                </li>\r\n                <li className=\"c-sidebar-nav-item\">\r\n                    <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname.startsWith('/user/log')?\" active\":\"\")} to=\"/user/log\">\r\n                        <i className=\"c-sidebar-nav-icon fa fa-list\"></i> Activity Logs\r\n                    </SidebarLink>\r\n                </li>\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default AppMenu;","import React from 'react';\r\nimport './loader.scss';\r\n\r\nconst Loader = ({size: Size, text: Text}) => (\r\n    <span>\r\n        <i className={\"fa fa-spinner fa-\"+Size+\" fa-spin loader\"} />\r\n        {typeof(Text) !== 'undefined' && Text !== \"\" ?(\r\n            <>{\" \"+Text}</>\r\n        ):(\r\n            <></>\r\n        )}\r\n    </span>\r\n    \r\n);\r\n\r\nexport default Loader;","import React, { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SidebarLink from '../SidebarLink';\r\nimport { AuthContext } from '../../FirebaseAuth';\r\n\r\nconst AccountMenu = () => {\r\n\r\n    const { accountId } = useParams();\r\n\r\n    const { userData } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        document.querySelectorAll('.c-sidebar').forEach(element => {\r\n            window.coreui.Sidebar._sidebarInterface(element)\r\n        });\r\n    })\r\n\r\n    return (\r\n\r\n            <ul className=\"c-sidebar-nav ps ps--active-y\">\r\n                <li className=\"c-sidebar-nav-title\">Account</li>\r\n                <li className=\"c-sidebar-nav-item\">\r\n                    <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname==='/account/'+accountId+'/'?\" active\":\"\")} to={'/account/'+accountId+'/'}>\r\n                        <i className=\"c-sidebar-nav-icon fa fa-tachometer-alt\"></i>Overview\r\n                    </SidebarLink>\r\n                </li>\r\n                {userData.currentAccount.role === 'admin' && \r\n                <>\r\n                    <li className=\"c-sidebar-nav-title\">Settings</li>\r\n                    <li className=\"c-sidebar-nav-item\">\r\n                        <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname.startsWith('/account/'+accountId+'/users')?\" active\":\"\")} to={'/account/'+accountId+'/users'}>\r\n                            <i className=\"c-sidebar-nav-icon fa fa-users\"></i>Manage Users\r\n                        </SidebarLink>\r\n                    </li>\r\n                    <li className=\"c-sidebar-nav-item\">\r\n                        <SidebarLink className={\"c-sidebar-nav-link\"+(window.location.pathname.startsWith('/account/'+accountId+'/billing')?\" active\":\"\")} to={'/account/'+accountId+'/billing'}>\r\n                            <i className=\"c-sidebar-nav-icon fa fa-file-invoice-dollar\"></i>Billing\r\n                        </SidebarLink>\r\n                    </li>\r\n                </>\r\n                }\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default AccountMenu;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <>\r\n            <NavLink className=\"c-sidebar-brand-full\" to=\"/\">\r\n                <h4 className=\"text-light c-sidebar-brand-full\">\r\n                    <i className=\"fa fa-fire text-warning c-sidebar-brand-full mr-2\"></i>\r\n                    FIREACT\r\n                </h4>\r\n            </NavLink>\r\n            <NavLink className=\"c-sidebar-brand-minimized\" to=\"/\">\r\n            <h4 className=\"c-sidebar-brand-minimized\">\r\n                <i className=\"fa fa-fire text-warning c-sidebar-brand-minimized\"></i>\r\n            </h4>\r\n            </NavLink>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const BreadcrumbContext = React.createContext();\r\n\r\nexport const Breadcrumb = ({links}) => {\r\n    return (\r\n        <div className=\"c-subheader justify-content-between px-3\">\r\n            <ol className=\"breadcrumb border-0 m-0 px-0 px-md-3\">\r\n                {links !== null && links.map((link, key) => {\r\n                        return (\r\n                            <li key={key} className={link.active?\"active breadcrumb-item\":\"breadcrumb-item\"}>\r\n                                {link.to !== null && \r\n                                    <Link to={link.to}>{link.text}</Link>\r\n                                }\r\n                                {link.to === null && \r\n                                    <>{link.text}</>\r\n                                }\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb;","import React, {useEffect, useState, useContext} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FirebaseAuth } from \"../../FirebaseAuth/firebase\";\r\nimport UserMenu from '../../menus/UserMenu';\r\nimport AppMenu from '../../menus/AppMenu';\r\nimport PublicTemplate from \"../../templates/PublicTemplate\";\r\nimport Loader from \"../../Loader\";\r\nimport { AuthContext } from \"../../FirebaseAuth\";\r\nimport AccountMenu from \"../../menus/AccountMenu\";\r\nimport Logo from '../../Logo';\r\nimport {BreadcrumbContext, Breadcrumb} from '../../Breadcrumb';\r\n\r\nconst AccountTemplate = ({ role, children }) => {\r\n\r\n    const { accountId } = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { setUserData, authUser } = useContext(AuthContext);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [breadcrumb, setBreadcrumb] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let account = {}\r\n        setLoading(true);\r\n        const accountRef = FirebaseAuth.firestore().doc('accounts/'+accountId);\r\n        accountRef.get().then(doc => {\r\n            if(doc.exists){\r\n                if(doc.data().subscriptionStatus && doc.data().subscriptionStatus==='active'){\r\n                    setIsActive(true);\r\n                }\r\n                account.id = doc.id;\r\n                account.owner = doc.data().owner;\r\n                account.name = doc.data().name;\r\n                account.planId = null;\r\n                if(doc.data().plan){\r\n                    account.planId = doc.data().plan.id;\r\n                }\r\n                account.price = doc.data().price;\r\n                account.subscriptionStatus = doc.data().subscriptionStatus;\r\n                account.role = (doc.data().admins.indexOf(authUser.user.uid) === -1?('user'):('admin'));\r\n                setUserData(userData => ({\r\n                    ...userData,\r\n                    currentAccount: account\r\n                }));\r\n                if(account.role !== role && role !== '*'){\r\n                    setError('Permission deined.');\r\n                }\r\n                setLoading(false);\r\n            }else{\r\n                setError('Invalid account.');\r\n                setLoading(false);\r\n            }\r\n        }).catch(err => {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        })\r\n    },[accountId, setUserData, role, authUser]);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <PublicTemplate>\r\n                    <Loader size=\"5x\" text=\"Loading...\"/>\r\n                </PublicTemplate>\r\n            ):(\r\n                <>\r\n                {error === null ? (\r\n                    <div className=\"c-app\">\r\n                        <div className=\"c-sidebar c-sidebar-dark c-sidebar-fixed c-sidebar-lg-show\" id=\"sidebar\">\r\n                            <div className=\"c-sidebar-brand d-md-down-none\">\r\n                                <Logo />\r\n                            </div>\r\n                            {isActive?(\r\n                                    <AccountMenu />\r\n                                ):(\r\n                                    <AppMenu />\r\n                            )}\r\n                            <button className=\"c-sidebar-minimizer c-class-toggler\" data-target=\"_parent\" data-class=\"c-sidebar-minimized\" type=\"button\" />\r\n                        </div>\r\n                        <div className=\"c-wrapper\">\r\n                            <header className=\"c-header c-header-light c-header-fixed\">\r\n                                <button className=\"c-header-toggler c-class-toggler d-lg-none mfe-auto\" type=\"button\" data-target=\"#sidebar\" data-class=\"c-sidebar-show\">\r\n                                    <i className=\"mt-3 fa fa-bars\" />\r\n                                </button>\r\n                                <div className=\"mfe-auto\">\r\n                                    <button className=\"c-header-toggler c-class-toggler mfs-3 d-md-down-none\" data-target=\"#sidebar\" data-class=\"c-sidebar-lg-show\">\r\n                                        <i className=\"mt-3 fa fa-bars\" />\r\n                                    </button>\r\n                                </div>\r\n                                <ul className=\"c-header-nav\">\r\n                                    <UserMenu />\r\n                                </ul>\r\n                                <Breadcrumb links={breadcrumb} />\r\n                            </header>\r\n                            <div className=\"c-body\">\r\n                                <main className=\"c-main\">\r\n                                <BreadcrumbContext.Provider value={{setBreadcrumb}}>\r\n                                {children}\r\n                                </BreadcrumbContext.Provider>\r\n                                </main>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ):(\r\n                    <PublicTemplate>\r\n                        {error}\r\n                    </PublicTemplate>\r\n                )}\r\n                </>\r\n            )}\r\n        </>\r\n\t\t\r\n    )\r\n}\r\n\r\nexport default AccountTemplate;","import React, {useEffect, useState, useContext} from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { FirebaseAuth } from \"../../FirebaseAuth/firebase\";\r\nimport UserMenu from '../../menus/UserMenu';\r\nimport PublicTemplate from \"../../templates/PublicTemplate\";\r\nimport Loader from \"../../Loader\";\r\nimport { AuthContext } from \"../../FirebaseAuth\";\r\nimport AccountMenu from \"../../menus/AccountMenu\";\r\nimport Logo from '../../Logo';\r\nimport {BreadcrumbContext, Breadcrumb} from '../../Breadcrumb';\r\n\r\nconst ActiveAccountTemplate = ({ role, children }) => {\r\n\r\n    const { accountId } = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { setUserData, authUser } = useContext(AuthContext);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [breadcrumb, setBreadcrumb] = useState([]);\r\n    useEffect(() => {\r\n        let account = {}\r\n        setLoading(true);\r\n        const accountRef = FirebaseAuth.firestore().doc('accounts/'+accountId);\r\n        accountRef.get().then(doc => {\r\n            if(doc.exists){\r\n                if(doc.data().subscriptionStatus && doc.data().subscriptionStatus === 'active'){\r\n                    setIsActive(true);\r\n                }\r\n                account.id = doc.id;\r\n                account.owner = doc.data().owner;\r\n                account.name = doc.data().name;\r\n                if(doc.data().plan){\r\n                    account.planId = doc.data().plan.id;\r\n                }\r\n                account.price = doc.data().price;\r\n                account.currency = doc.data().currency;\r\n                account.paymentCycle = doc.data().paymentCycle;\r\n                account.subscriptionStatus = doc.data().subscriptionStatus;\r\n                account.subscriptionCurrentPeriodEnd = doc.data().subscriptionCurrentPeriodEnd;\r\n                account.role = (doc.data().admins.indexOf(authUser.user.uid) === -1?('user'):('admin'));\r\n                setUserData(userData => ({\r\n                    ...userData,\r\n                    currentAccount: account\r\n                }));\r\n                if(account.role !== role && role !== '*'){\r\n                    setError('Permission deined.');\r\n                }\r\n                setLoading(false);\r\n            }else{\r\n                setError('Invalid account.');\r\n                setLoading(false);\r\n            }\r\n        }).catch(err => {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        })\r\n    },[accountId, setUserData, role, authUser]);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <PublicTemplate>\r\n                    <Loader size=\"5x\" text=\"Loading...\"/>\r\n                </PublicTemplate>\r\n            ):(\r\n                <>\r\n                {error === null ? (\r\n                    <>\r\n                    {isActive ? (\r\n                        <div className=\"c-app\">\r\n                            <div className=\"c-sidebar c-sidebar-dark c-sidebar-fixed c-sidebar-lg-show\" id=\"sidebar\">\r\n                                <div className=\"c-sidebar-brand d-md-down-none\">\r\n                                    <Logo />\r\n                                </div>\r\n                                <AccountMenu />\r\n                                <button className=\"c-sidebar-minimizer c-class-toggler\" data-target=\"_parent\" data-class=\"c-sidebar-minimized\" type=\"button\" />\r\n                            </div>\r\n                            <div className=\"c-wrapper\">\r\n                                <header className=\"c-header c-header-light c-header-fixed\">\r\n                                    <button className=\"c-header-toggler c-class-toggler d-lg-none mfe-auto\" type=\"button\" data-target=\"#sidebar\" data-class=\"c-sidebar-show\">\r\n                                        <i className=\"mt-3 fa fa-bars\" />\r\n                                    </button>\r\n                                    <div className=\"mfe-auto\">\r\n                                        <button className=\"c-header-toggler c-class-toggler mfs-3 d-md-down-none\" data-target=\"#sidebar\" data-class=\"c-sidebar-lg-show\">\r\n                                            <i className=\"mt-3 fa fa-bars\" />\r\n                                        </button>\r\n                                    </div>\r\n                                    <ul className=\"c-header-nav\">\r\n                                        <UserMenu />\r\n                                    </ul>\r\n                                    <Breadcrumb links={breadcrumb} />\r\n                                </header>\r\n                                <div className=\"c-body\">\r\n                                    <main className=\"c-main\">\r\n                                    <BreadcrumbContext.Provider value={{setBreadcrumb}}>\r\n                                    {children}\r\n                                    </BreadcrumbContext.Provider>\r\n                                    </main>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ):(\r\n                        <Redirect to={'/account/'+accountId+'/billing/plan'}></Redirect>\r\n                    )}\r\n                    </>\r\n                ):(\r\n                    <PublicTemplate>\r\n                        {error}\r\n                    </PublicTemplate>\r\n                )}\r\n                </>\r\n            )}\r\n        </>\r\n\t\t\r\n    )\r\n}\r\n\r\nexport default ActiveAccountTemplate;","import React, {useContext} from 'react';  \r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../FirebaseAuth\";\r\nimport PublicTemplate from \"../../templates/PublicTemplate\";\r\nimport Loader from \"../../Loader\";\r\n\r\nconst AuthRouter = ({component: Component, template: Template, title: Title, ...rest}) => {\r\n    \r\n    document.title = Title;\r\n\r\n    const {authUser} = useContext(AuthContext);\r\n    \r\n    return ( \r\n        <Route\r\n            {...rest}\r\n            render={ matchProps => (\r\n                authUser.checked ? (\r\n                    !!authUser.user ? (\r\n                    \r\n                        <Template {...rest}>\r\n                            <Component {...matchProps} />  \r\n                        </Template>\r\n                    ):(\r\n                        <Redirect to={\"/signin\"} /> \r\n                    )\r\n                ):(\r\n                    <PublicTemplate>\r\n                        <Loader size=\"5x\" text=\"Loading...\"/>\r\n                    </PublicTemplate>\r\n                )\r\n            )}\r\n        />\r\n    );\r\n}\r\nexport default withRouter(AuthRouter);","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport { FirebaseAuth } from '../FirebaseAuth/firebase';\r\nimport firebase from 'firebase/app';\r\nimport { userSignIn } from '../../libs/user';\r\n\r\nconst FirebaseUI = () => {\r\n  const [signInSuccess, setSignInSuccess] = useState(null);\r\n\r\n  // Configure FirebaseUI.\r\n  const uiConfig = {\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: function (authResult, redirectUrl) {\r\n        userSignIn((result) => {\r\n          if (result) {\r\n            setSignInSuccess(true);\r\n            window.location = '/';\r\n          } else {\r\n            setSignInSuccess(false);\r\n          }\r\n        });\r\n        return false;\r\n      },\r\n      uiShown: function () {\r\n        document.getElementById('loader').style.display = 'none';\r\n      },\r\n    },\r\n    signInSuccessUrl: '/',\r\n    signInOptions: [\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {signInSuccess && <i className='fa fa-spinner fa-5x fa-spin' />}\r\n      {signInSuccess === null && (\r\n        <>\r\n          <div id='sign-in' className='SignIn'>\r\n            <StyledFirebaseAuth\r\n              uiConfig={uiConfig}\r\n              firebaseAuth={FirebaseAuth.auth()}\r\n            />\r\n          </div>\r\n          <div id='loader'>\r\n            <i className='fa fa-spinner fa-5x fa-spin' />\r\n          </div>\r\n        </>\r\n      )}\r\n      {signInSuccess === false && (\r\n        <div className='text-center'>\r\n          <i className='fa fa-5x fa-fire text-warning'></i>\r\n          <h1>Server Error</h1>\r\n          <p>Oops, something went wrong, please try again.</p>\r\n          <Link to='/'>Home</Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FirebaseUI;\r\n","import React from \"react\";\r\nimport FirebaseUI from '../../../components/FirebaseUI';\r\n\r\nconst SignIn = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-3\"></div>\r\n        \r\n            <div className=\"text-center col-md-6\">\r\n                <div className=\"card\">\r\n                    <p></p>\r\n                    <i className=\"fa fa-5x fa-fire text-warning\"></i>\r\n                    <h2 className=\"h3 mb-3 font-weight-normal\">Please sign in</h2>\r\n                    <div className=\"card-body\">\r\n                        <FirebaseUI />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, {useState, useContext, useEffect, useRef} from \"react\";\r\nimport { BreadcrumbContext } from '../../../components/Breadcrumb';\r\nimport { FirebaseAuth } from \"../../../components/FirebaseAuth/firebase\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst Home = () => {\r\n    const title = 'My Accounts';\r\n\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    \r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const mountedRef = useRef(true);\r\n\r\n    const getAccounts = () => {\r\n        setLoading(true);\r\n        let records = [];\r\n        const accountsRef = FirebaseAuth.firestore().collection('accounts');\r\n        let query = accountsRef.where('access', 'array-contains', FirebaseAuth.auth().currentUser.uid);\r\n        query.get().then(accountSnapshots => {\r\n            if (!mountedRef.current) return null\r\n            accountSnapshots.forEach(account => {\r\n                records.push({\r\n                    'id': account.id,\r\n                    'name': account.data().name,\r\n                    'subscriptionStatus': account.data().subscriptionStatus\r\n                });\r\n            });\r\n            setAccounts(records);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n        getAccounts();\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[setBreadcrumb]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    \r\n                    {accounts.length > 0 ? (\r\n                        <>\r\n                            <div className=\"text-right mb-3\">\r\n                                <Link to=\"/new-account\" className=\"btn btn-primary\"><i className=\"fa fa-plus\"></i> Add Account</Link>\r\n                            </div>\r\n                            \r\n                            {accounts.map((account, i) => \r\n                                \r\n                                <div className=\"card\" key={account.id}>\r\n                                    <div className=\"card-header font-weight-bold\">\r\n                                        <h5>{account.name}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        {account.subscriptionStatus?(\r\n                                            <Link to={'/account/'+account.id+'/'}>Account Overview</Link>\r\n                                        ):(\r\n                                            <Link to={'/account/'+account.id+'/billing/plan'}>Activate the account</Link>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            )}\r\n                            \r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {(loading) ? (\r\n                                <Loader text=\"loading accounts...\"></Loader>\r\n                            ):(\r\n                                <Redirect to=\"/new-account\"></Redirect>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound = ({ children }) => (\r\n    <div className=\"text-center\">\r\n        <i className=\"fa fa-5x fa-fire text-warning\"></i>\r\n        <h1>Page not found</h1>\r\n        <p>Oops, the page you requested is not found.</p>\r\n        <Link to=\"/\">Home</Link>\r\n    </div>\r\n);\r\n\r\nexport default PageNotFound;","import React, {useState} from \"react\";\r\nimport UserMenu from '../../menus/UserMenu';\r\nimport AppMenu from '../../menus/AppMenu';\r\nimport Logo from '../../Logo';\r\nimport {BreadcrumbContext, Breadcrumb} from '../../Breadcrumb';\r\n\r\n\r\nconst AppTemplate = ({ children }) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState([]);\r\n\r\n    return (\r\n\t\t<div className=\"c-app\">\r\n            <div className=\"c-sidebar c-sidebar-dark c-sidebar-fixed c-sidebar-lg-show\" id=\"sidebar\">\r\n                <div className=\"c-sidebar-brand d-md-down-none\">\r\n                    <Logo />\r\n                </div>\r\n                <AppMenu />\r\n                <button className=\"c-sidebar-minimizer c-class-toggler\" data-target=\"_parent\" data-class=\"c-sidebar-minimized\" type=\"button\" />\r\n            </div>\r\n            \r\n            <div className=\"c-wrapper\">\r\n                <header className=\"c-header c-header-light c-header-fixed\">\r\n                    <button className=\"c-header-toggler c-class-toggler d-lg-none mfe-auto\" type=\"button\" data-target=\"#sidebar\" data-class=\"c-sidebar-show\">\r\n                        <i className=\"mt-3 fa fa-bars\" />\r\n                    </button>\r\n                    <div className=\"mfe-auto\">\r\n                        <button className=\"c-header-toggler c-class-toggler mfs-3 d-md-down-none\" data-target=\"#sidebar\" data-class=\"c-sidebar-lg-show\">\r\n                            <i className=\"mt-3 fa fa-bars\" />\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"c-header-nav\">\r\n                        <UserMenu />\r\n                    </ul>\r\n                    <Breadcrumb links={breadcrumb} />\r\n                </header>\r\n                <div className=\"c-body\">\r\n                    <main className=\"c-main\">\r\n                    <BreadcrumbContext.Provider value={{setBreadcrumb}}>\r\n                    {children}\r\n                    </BreadcrumbContext.Provider>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppTemplate;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../FirebaseAuth';\r\nimport UserAvatar from '../../UserAvatar';\r\n\r\nconst UserProfileView = () => {\r\n    return (\r\n        <AuthContext.Consumer>\r\n            {(context) => (   \r\n                        <div className=\"list-group\">\r\n                            <a href=\"/\" className=\"list-group-item group-item-action disabled\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>AVATAR</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        Update via social login\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <UserAvatar name={context.authUser.user.displayName} photoUrl={context.authUser.user.photoURL} className=\"mt-3 rounded-circle\" size=\"64\" />\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                            <Link to=\"/user/profile/update-name\" className=\"list-group-item list-group-item-action\">\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>NAME</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        {context.authUser.user.displayName}\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/user/profile/update-email\" className=\"list-group-item list-group-item-action\">\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>EMAIL</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        {context.authUser.user.email}\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/user/profile/verify-email\" className={\"list-group-item list-group-item-action\"+(context.authUser.user.emailVerified?\" disabled\":\"\")}>\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>EMAIL VERIFIED</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        {(context.authUser.user.emailVerified?\" Verified\":\"Unverified email\")}\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/user/profile/update-phone\" className=\"list-group-item list-group-item-action\">\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>PHONE</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        {context.authUser.user.phoneNumber}\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/user/profile/update-password\" className=\"list-group-item list-group-item-action\">\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-sm-12 col-md-3 text-left\">\r\n                                        <strong>PASSWORD</strong>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 col-md-6 text-left\">\r\n                                        ••••••••\r\n                                    </div>\r\n                                    <div className=\"col-sm-3 col-md-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <Link to=\"/user/profile/delete\" className=\"list-group-item list-group-item-action\">\r\n                                <div className=\"row\">\r\n                                   <div className=\"col-9 text-danger text-left\">\r\n                                        <strong>DELETE ACCOUNT</strong>\r\n                                    </div>\r\n                                    <div className=\"col-3 text-right\">\r\n                                        <i className=\"fa fa-angle-right\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n            )}\r\n        </AuthContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default UserProfileView;","import React, {useContext, useEffect} from \"react\";\r\nimport {BreadcrumbContext} from '../../Breadcrumb';\r\n\r\nconst UserPageLayout = (props) => {\r\n    const {\r\n        title,\r\n        children\r\n    } = props\r\n\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/user/profile\",\r\n                text: \"User\",\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    },[setBreadcrumb, title]);\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPageLayout;","import React from \"react\";\r\nimport UserProfileView from '../../../../components/user/UserProfileView';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\n\r\nconst UserProfile = () => {\r\n\r\n    return (\r\n        <UserPageLayout title=\"Manage Your Profile\" >\r\n            <UserProfileView />\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Field = (props) => {\r\n\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-md-2 col-lg-2 col-form-label\">{props.label}</label>\r\n            <div className=\"col-md-10 col-lg-5\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nField.propTypes = {\r\n    label: PropTypes.string\r\n}\r\n\r\nexport default Field;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Field from './Field';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\n\r\nconst Form = (props) => {\r\n\r\n    const {\r\n        handleSubmit,\r\n        disabled,\r\n        inSubmit,\r\n        enableDefaultButtons,\r\n        submitBtnStyle,\r\n        submitBtnText,\r\n        backBtnText,\r\n        backToUrl,\r\n        children,\r\n        ...others} = props;\r\n\r\n    let btnClass = \"primary\";\r\n    if(submitBtnStyle){\r\n        btnClass = submitBtnStyle;\r\n    }\r\n\r\n    return (\r\n        <form {...others} onSubmit={handleSubmit}>\r\n            {children}\r\n            {enableDefaultButtons && \r\n                <Field>\r\n                    <button className={\"btn mr-2 btn-\"+btnClass} disabled={(disabled?'disabled':'')}>\r\n                        {inSubmit && \r\n                            <Loader />\r\n                        }\r\n                        {((disabled && !inSubmit)?(<i className=\"fa fa-ban mr-1\"></i>):'')}\r\n                        {submitBtnText || 'Submit'}\r\n                    </button>\r\n                    {backToUrl && backToUrl !== \"\" &&\r\n                        <Link className={\"btn btn-secondary\"+(inSubmit?\" disabled\":\"\")} to={backToUrl}>\r\n                            {backBtnText || 'Back'}\r\n                        </Link>\r\n                    }\r\n                </Field>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    inSubmit: PropTypes.bool,\r\n    enableDefaultButtons: PropTypes.bool,\r\n    submitBtnText: PropTypes.string,\r\n    backBtnText: PropTypes.string,\r\n    backToUrl: PropTypes.string\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Input = (props) => {\r\n\r\n    const {\r\n        hasError,\r\n        validRegex,\r\n        minLen,\r\n        maxLen,\r\n        required,\r\n        error,\r\n        changeHandler,\r\n        ...others\r\n    } = props;\r\n\r\n    const [hasErrorState, setHasErrorState] = useState(hasError);\r\n    const [errorMessage, setErrorMessage] = useState(error);\r\n\r\n    useEffect(() => {\r\n        setHasErrorState(hasError);\r\n        setErrorMessage(error);\r\n    }, [hasError, error]);\r\n\r\n    return (\r\n        <>\r\n            <input className={\"form-control\"+(hasErrorState?' is-invalid':'')} {...others} onChange={e => {\r\n                let foundError = false;\r\n                let foundErrorMessage = '';\r\n                // validae required\r\n                if(typeof(required) !== 'undefined' && required){\r\n                    if(e.target.value.trim().length === 0){\r\n                        foundErrorMessage = 'This is a required field.';\r\n                        foundError = true;\r\n                    }\r\n                }\r\n\r\n                // validate length\r\n                if(!foundError && typeof(minLen) !== 'undefined' && minLen !== 0){\r\n                    if(e.target.value.length < minLen){\r\n                        foundErrorMessage = 'The input must be at least '+minLen+' characters.';\r\n                        foundError = true;\r\n                    }\r\n                }\r\n                if(!foundError && typeof(maxLen) !== 'undefined' && maxLen !== 0){\r\n                    if(e.target.value.length > maxLen){\r\n                        foundErrorMessage = 'The input must be no more than '+maxLen+' characters.';\r\n                        foundError = true;\r\n                    }\r\n                }\r\n                \r\n                // validate the value against validation regex\r\n                if(!foundError && typeof(validRegex) !=='undefined' && validRegex !== ''){\r\n                    if(!RegExp(validRegex).test(e.target.value)){\r\n                        foundErrorMessage = 'The input format is invalid.';\r\n                        foundError = true;\r\n                    }\r\n                }\r\n                if(foundError){\r\n                    setHasErrorState(true);\r\n                    setErrorMessage(foundErrorMessage);\r\n                }else{\r\n                    setHasErrorState(false);\r\n                }\r\n                changeHandler({\r\n                    hasError: foundError,\r\n                    error: foundErrorMessage,\r\n                    value: e.target.value\r\n                });\r\n            }} />\r\n            {hasErrorState && \r\n                <div className=\"invalid-feedback\">\r\n                    {errorMessage}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    validRegex: PropTypes.string,\r\n    hasError: PropTypes.bool,\r\n    error: PropTypes.string,\r\n    minLen: PropTypes.number,\r\n    maxLen: PropTypes.number,\r\n    required: PropTypes.bool,\r\n    changeHandler: PropTypes.func\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst Alert = ({type, message, dismissible, onDismiss}) => {\r\n\r\n    return (\r\n        <div className={\"alert fade show alert-\"+type+(dismissible?\" alert-dismissible\":\"\")} role=\"alert\">\r\n            {message}\r\n            {dismissible && \r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={onDismiss} >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React, { useState, useContext } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport firebase from \"firebase/app\";\r\nimport { FirebaseAuth } from '../../../../components/FirebaseAuth/firebase';\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\nimport { log, UPDATE_EMAIL } from '../../../../libs/log';\r\n\r\nconst UpdateEmail = () => {\r\n    const title = \"Change Your Email\";\r\n    \r\n\r\n    const [emailAddress, setEmailAddress] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n    const [password, setPassword] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const [result, setResult] = useState({\r\n        status: null,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === null &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    // check password\r\n                    const credential = firebase.auth.EmailAuthProvider.credential(\r\n                        FirebaseAuth.auth().currentUser.email,\r\n                        password.value\r\n                    )\r\n                    // update email address\r\n                    authUser.user.reauthenticateWithCredential(credential)\r\n                    .then(() => {\r\n                        authUser.user.updateEmail(emailAddress.value).then(() => {\r\n                            authUser.user.sendEmailVerification().then(() => {\r\n                                log(UPDATE_EMAIL);\r\n                                setResult({\r\n                                    status: true,\r\n                                    message: 'Your email address has been updated. Please check your email inbox to verify the email address.'\r\n                                });\r\n                                setInSubmit(false);\r\n                            }).catch(() => {\r\n                                setResult({\r\n                                    status: true,\r\n                                    message: 'Your email address has been updated. Please verify your email.'\r\n                                });\r\n                                setInSubmit(false);\r\n                            })\r\n                        }).catch(err => {\r\n                            setResult({\r\n                                status: false,\r\n                                message: err.message\r\n                            });\r\n                            setInSubmit(false);\r\n                        })\r\n                    }).catch(() => {\r\n                        setPassword({\r\n                            hasError: true,\r\n                            error: 'Incorrect password, authentication failed.',\r\n                            value: password.value\r\n                        })\r\n                        setInSubmit(false);\r\n                    })\r\n                }}\r\n                disabled={emailAddress.hasError || password.hasError || emailAddress.value===null || password.value===null || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Email Address\">\r\n                        <Input type=\"email\" name=\"email-address\" hasError={emailAddress.hasError} error={emailAddress.error} minLen={5} maxLen={50} required={true} validRegex=\"^[a-zA-Z0-9-_+\\.]*@[a-zA-Z0-9-_\\.]*\\.[a-zA-Z0-9-_\\.]*$\" changeHandler={setEmailAddress} />\r\n                    </Field>\r\n                    <Field label=\"Current Password\">\r\n                        <Input type=\"password\" name=\"password\" hasError={password.hasError} error={password.error} required={true} changeHandler={setPassword} />\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === false &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: null,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === true &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UpdateEmail;","import React, { useState, useContext } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\nimport { userUpdateName } from '../../../../libs/user';\r\n\r\nconst UpdateName = () => {\r\n    const title = \"Change Your Name\";\r\n    \r\n\r\n    const [fullname, setFullname] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const [result, setResult] = useState({\r\n        status: null,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === null &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    authUser.user.updateProfile({\r\n                        displayName: fullname.value\r\n                    }).then(() => {\r\n                        userUpdateName();\r\n                        setResult({\r\n                            status: true,\r\n                            message: 'Your name has been updated.'\r\n                        });\r\n                        setInSubmit(false);\r\n                    }).catch(err => {\r\n                        setResult({\r\n                            status: false,\r\n                            message: err.message\r\n                        });\r\n                        setInSubmit(false);\r\n                    })\r\n                }}\r\n                disabled={fullname.hasError || fullname.value===null || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Your Name\">\r\n                        <Input type=\"text\" name=\"full-name\" maxLen={100} required={true} changeHandler={setFullname} />\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === false &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: null,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === true &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UpdateName;","import React, { useState, useContext } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field } from '../../../../components/Form';\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\n\r\nconst UpdateEmail = () => {\r\n    const title = \"Verify Your Email\";\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const [result, setResult] = useState({\r\n        status: null,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === null && !authUser.user.emailVerified &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    authUser.user.sendEmailVerification().then(() => {\r\n                        setResult({\r\n                            status: true,\r\n                            message: 'Please check your email inbox to verify the email address. Refresh this page after you verified your email address.'\r\n                        });\r\n                        setInSubmit(false);\r\n                    }).catch((err) => {\r\n                        setResult({\r\n                            status: false,\r\n                            message: err.message\r\n                        });\r\n                        setInSubmit(false);\r\n                    })\r\n                }}\r\n                disabled={inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Email Address\">\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext\" value={authUser.user.email} ></input>\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === null && authUser.user.emailVerified &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message=\"Your email is already verified.\" />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === false &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: null,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === true &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UpdateEmail;","import React, { useState, useContext } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport firebase from \"firebase/app\";\r\nimport { FirebaseAuth } from '../../../../components/FirebaseAuth/firebase';\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\nimport { log, UPDATE_PASSWORD } from '../../../../libs/log';\r\n\r\nconst UpdatePassword = () => {\r\n    const title = \"Change Your Password\";\r\n    \r\n    const [password, setPassword] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const [newPassword, setNewPassword] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const [result, setResult] = useState({\r\n        status: null,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === null &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    if(newPassword.value !== confirmPassword.value){\r\n                        setConfirmPassword({\r\n                            hasError: true,\r\n                            error: 'The confirm password does not match with the new password.',\r\n                            value: password.value\r\n                        });\r\n                        setInSubmit(false);\r\n                    }else{\r\n                        // check password\r\n                        const credential = firebase.auth.EmailAuthProvider.credential(\r\n                            FirebaseAuth.auth().currentUser.email,\r\n                            password.value\r\n                        )\r\n                        // update email address\r\n                        authUser.user.reauthenticateWithCredential(credential)\r\n                        .then(() => {\r\n                            FirebaseAuth.auth().currentUser.updatePassword(newPassword.value)\r\n                            .then(() => {\r\n                                log(UPDATE_PASSWORD);\r\n                                setResult({\r\n                                    status: true,\r\n                                    message: 'Your password has been updated.'\r\n                                });\r\n                                setInSubmit(false);\r\n                            }).catch(err => {\r\n                                setResult({\r\n                                    status: false,\r\n                                    message: err.message\r\n                                });\r\n                                setInSubmit(false);\r\n                            })\r\n                        }).catch(() => {\r\n                            setPassword({\r\n                                hasError: true,\r\n                                error: 'Incorrect password, authentication failed.',\r\n                                value: password.value\r\n                            });\r\n                            setInSubmit(false);\r\n                        })\r\n                    }\r\n                }}\r\n                disabled={password.hasError || newPassword.hasError || confirmPassword.hasError || password.value===null || newPassword.value===null || confirmPassword.value===null || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Current Password\">\r\n                        <Input type=\"password\" name=\"password\" hasError={password.hasError} error={password.error} required={true} changeHandler={setPassword} />\r\n                    </Field>\r\n                    <Field label=\"New Password\">\r\n                        <Input type=\"password\" name=\"newPassword\" hasError={newPassword.hasError} error={newPassword.error} required={true} minLen={6} maxLen={20} changeHandler={setNewPassword} />\r\n                    </Field>\r\n                    <Field label=\"Confirm Password\">\r\n                        <Input type=\"password\" name=\"confirmPassword\" hasError={confirmPassword.hasError} error={confirmPassword.error} required={true} minLen={6} maxLen={20} changeHandler={setConfirmPassword} />\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === false &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: null,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === true &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword;","import React, { useState, useContext, useEffect, createRef } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport firebase from \"firebase/app\";\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\nimport { log, UPDATE_PHONE } from '../../../../libs/log';\r\n\r\nconst UpdatePhone = () => {\r\n    const title = \"Change Your Phone Number\";\r\n\r\n    const [phoneNumber, setPhoneNumber] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const [verificationCode, setVerificationCode] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const SUCCESS = 'success';\r\n    const FAILURE = 'failure';\r\n    const PHONESTEP = 'phone';\r\n    const VERIFYSTEP = 'verify';\r\n\r\n    const [result, setResult] = useState({\r\n        status: PHONESTEP,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    let recaptcha = createRef();\r\n    const [recaptchaVerified, setRecaptchaVerified] = useState(false);\r\n    const [verificationId, setVerificationId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(result.status===PHONESTEP){\r\n            window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(recaptcha, {\r\n                'size': 'normal',\r\n                'callback': function (response) {\r\n                    setRecaptchaVerified(true);\r\n                },\r\n                'expired-callback': function () {\r\n                    setRecaptchaVerified(false);\r\n                }\r\n            });\r\n            window.recaptchaVerifier.render().then(function (widgetId) {\r\n                window.recaptchaWidgetId = widgetId;\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[result]);  \r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === PHONESTEP &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    setRecaptchaVerified(false);\r\n                    var provider = new firebase.auth.PhoneAuthProvider();\r\n                    provider.verifyPhoneNumber(\r\n                        phoneNumber.value,\r\n                        window.recaptchaVerifier\r\n                    ).then(vid => {\r\n                        setRecaptchaVerified(true);\r\n                        setVerificationId(vid);\r\n                        setResult({\r\n                            status: VERIFYSTEP,\r\n                            message: ''\r\n                        });\r\n                        setInSubmit(false);    \r\n                    }).catch(err => {\r\n                        setPhoneNumber({\r\n                            hasError: true,\r\n                            error: err.message,\r\n                            value: phoneNumber.value\r\n                        })\r\n                        setInSubmit(false);\r\n                    })          \r\n                }}\r\n                disabled={phoneNumber.hasError || phoneNumber.value===null || !recaptchaVerified || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Phone Number\">\r\n                        <Input type=\"text\" name=\"phone-number\" hasError={phoneNumber.hasError} error={phoneNumber.error} required={true} changeHandler={setPhoneNumber} />\r\n                    </Field>\r\n                    <Field label=\"\">\r\n                        <div ref={(ref)=>recaptcha=ref}></div>\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === VERIFYSTEP && \r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    var cred = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode.value);\r\n                    authUser.user.updatePhoneNumber(cred).then(() => {\r\n                        log(UPDATE_PHONE);\r\n                        setResult({\r\n                            status: SUCCESS,\r\n                            message: 'Your phone number has been updated.'\r\n                        });\r\n                        setInSubmit(false);\r\n                    }).catch(err => {\r\n                        setResult({\r\n                            status: FAILURE,\r\n                            message: err.message\r\n                        })\r\n                        setInSubmit(false);\r\n                    });\r\n                }}\r\n                disabled={verificationCode.hasError || verificationCode.value===null || !recaptchaVerified || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Verification Code\">\r\n                        <Input type=\"text\" name=\"verification-code\" hasError={verificationCode.hasError} error={verificationCode.error} required={true} changeHandler={setVerificationCode} />\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === FAILURE &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: PHONESTEP,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === SUCCESS &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default UpdatePhone;","import React, { useState, useContext } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport { AuthContext } from '../../../../components/FirebaseAuth';\r\nimport Alert from '../../../../components/Alert';\r\nimport UserPageLayout from '../../../../components/user/UserPageLayout';\r\n\r\nconst DeleteUser = () => {\r\n    const title = \"Delete Your Account\";\r\n    \r\n\r\n    const [emailAddress, setEmailAddress] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const { authUser } = useContext(AuthContext);\r\n\r\n    const [result, setResult] = useState({\r\n        status: null,\r\n        message: ''\r\n    });\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    return (\r\n        <UserPageLayout title={title} >\r\n            { result.status === null &&\r\n                <Form handleSubmit={e => {\r\n                    e.preventDefault();\r\n                    setInSubmit(true);\r\n                    if(emailAddress.value === authUser.user.email){\r\n                        authUser.user.delete().then(() => {\r\n                            setResult({\r\n                                status: true,\r\n                                message: 'Your account has been deleted.'\r\n                            });\r\n                            setInSubmit(false);\r\n                        }).catch(err => {\r\n                            setResult({\r\n                                status: false,\r\n                                message: err.message\r\n                            });\r\n                            setInSubmit(false);\r\n                        });\r\n                    }else{\r\n                        setEmailAddress({\r\n                            hasError: true,\r\n                            error: 'The email address does not match your email address.',\r\n                            value: emailAddress.value\r\n                        })\r\n                        setInSubmit(false);\r\n                    }\r\n                }}\r\n                submitBtnText='DELETE'\r\n                submitBtnStyle='danger'\r\n                disabled={emailAddress.hasError || emailAddress.value===null || inSubmit}\r\n                inSubmit={inSubmit}\r\n                enableDefaultButtons={true}\r\n                backToUrl=\"/user/profile\"\r\n                >\r\n                    <Field label=\"Confirm Your Email\">\r\n                        <Input type=\"email\" name=\"email-address\" hasError={emailAddress.hasError} error={emailAddress.error} minLen={5} maxLen={50} required={true} validRegex=\"^[a-zA-Z0-9-_+\\.]*@[a-zA-Z0-9-_\\.]*\\.[a-zA-Z0-9-_\\.]*$\" changeHandler={setEmailAddress} />\r\n                    </Field>\r\n                </Form>\r\n            }\r\n            { result.status === false &&\r\n                <>\r\n                    <Alert type=\"danger\" dismissible={false} message={result.message} />\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => {\r\n                        setResult({\r\n                            status: null,\r\n                            message: ''\r\n                        })\r\n                    }} >Try Again</button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n            { result.status === true &&\r\n                <>\r\n                    <Alert type=\"success\" dismissible={false} message={result.message} />\r\n                    <Link className=\"btn btn-primary\" to=\"/user/profile\">View Profile</Link>\r\n                </>\r\n            }\r\n        </UserPageLayout>\r\n    )\r\n}\r\n\r\nexport default DeleteUser;","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { FirebaseAuth } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport Loader from '../../../../components/Loader';\r\n\r\nconst ViewLogs = () => {\r\n    const pageSize = 10;\r\n\r\n    const [total, setTotal] = useState(0);\r\n    const getTotal = () => {\r\n        const userDocRef = FirebaseAuth.firestore().collection('users').doc(FirebaseAuth.auth().currentUser.uid);\r\n        userDocRef.get().then(function(userDoc){\r\n            if (!mountedRef.current) return null\r\n            if(userDoc.exists){\r\n                setTotal(userDoc.data().activityCount);\r\n            }\r\n        })\r\n    }\r\n\r\n    // document snapshots\r\n    const [qs, setQs] = useState(null);\r\n    const mountedRef = useRef(true);\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getLogs = (pageSize, lastDoc) => {\r\n        setLoading(true);\r\n        let records = [];\r\n        const collectionRef = FirebaseAuth.firestore().collection('users').doc(FirebaseAuth.auth().currentUser.uid).collection('activities');\r\n        let query = collectionRef.orderBy('time', 'desc');\r\n        if(lastDoc){\r\n            query = query.startAfter(lastDoc);\r\n        }\r\n        query = query.limit(pageSize);\r\n        query.get().then(documentSnapshots => {\r\n            if (!mountedRef.current) return null\r\n            documentSnapshots.forEach(doc => {\r\n                records.push({\r\n                    'timestamp': doc.id,\r\n                    'time': doc.data().time.toDate().toLocaleString(),\r\n                    'action': doc.data().action\r\n                });\r\n            });\r\n            if(records.length > 0){\r\n                setRows(rows => rows.concat(records));\r\n                setQs(documentSnapshots);\r\n                setCount(count => documentSnapshots.size+count);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const title = 'View Activity Logs'\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/user/profile\",\r\n                text: \"User\",\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n        getTotal();\r\n        getLogs(pageSize);\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[setBreadcrumb]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {total > 0 ? (\r\n                                <>\r\n                                    <div className=\"col-sm-12 table-responsive\">\r\n                                        <table className=\"table table-responsive-sm table-hover table-outline\">\r\n                                            <thead className=\"thead-light\">\r\n                                                <tr role=\"row\">\r\n                                                    <th>Activity</th>\r\n                                                    <th>Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {rows.map((r,i) => \r\n                                                    <tr key={r.timestamp+i} row=\"row\">\r\n                                                        <td>{r.action}</td>\r\n                                                        <td>{r.time}</td>\r\n                                                    </tr>\r\n                                                )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-5\">\r\n                                            {count} of {total}\r\n                                        </div>\r\n                                        <div className=\"col-7 text-right\">\r\n                                            <button className=\"btn btn-primary\" disabled={(total===count || loading)?'disabled':''} onClick={e => {\r\n                                                e.preventDefault();\r\n                                                getLogs(pageSize, qs.docs[qs.docs.length-1]);\r\n                                            }} >{loading && <Loader />} More activities...</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                {(qs === null) ? (\r\n                                    <Loader text=\"loading logs...\"></Loader>\r\n                                ):(\r\n                                    <div>No activity is found</div>\r\n                                )}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ViewLogs;","import React, {useState, useContext, useEffect, useRef} from \"react\";\r\nimport { FirebaseAuth, CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport Loader from '../../../../components/Loader';\r\nimport Alert from \"../../../../components/Alert\";\r\nimport { countries } from \"../../../../inc/country.json\";\r\n\r\nconst Plans = () => {\r\n    const title = 'Select a Plan';\r\n\r\n    const { userData, authUser } = useContext(AuthContext);\r\n    const mountedRef = useRef(true);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [processing, setProcessing] = useState(false);\r\n    const [plans, setPlans] = useState([]);\r\n    const [selectedPlan, setSelectedPlan] = useState({id: 0});\r\n    const [cardError, setCardError] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [country, setCountry] = useState(\"\");\r\n    const [countryError, setCountryError] = useState(null);\r\n    const [state, setState] = useState(\"\");\r\n    const [stateError, setStateError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },      \r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n        setLoading(true);\r\n\r\n        const plansQuery = FirebaseAuth.firestore().collection('plans').orderBy('price', 'asc');\r\n        plansQuery.get().then(planSnapShots => {\r\n            if (!mountedRef.current) return null\r\n            let p = [];\r\n            planSnapShots.forEach(doc => {\r\n                p.push({\r\n                    'id': doc.id,\r\n                    'name': doc.data().name,\r\n                    'price': doc.data().price,\r\n                    'currency': doc.data().currency,\r\n                    'paymentCycle': doc.data().paymentCycle,\r\n                    'features': doc.data().features,\r\n                    'stripePriceId': doc.data().stripePriceId,\r\n                    'current': (userData.currentAccount.planId===doc.id)?true:false\r\n                });\r\n            });\r\n            if(p.length > 0){\r\n                const ascendingOrderPlans = p.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\r\n                setPlans(ascendingOrderPlans);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[userData, setBreadcrumb, title]);\r\n\r\n    const subcribe = async(event) => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n        setErrorMessage(null);\r\n\r\n        let hasError = false;\r\n        let paymentMethodId = '';\r\n\r\n        if(selectedPlan.price !== 0){\r\n            if(country === ''){\r\n                setCountryError('Please select a country.');\r\n                hasError = true;\r\n            }\r\n\r\n            if(state === '' && countries[country] && countries[country].states){\r\n                setStateError('Please select a state.');\r\n                hasError = true;\r\n            }\r\n\r\n            setCardError(null);\r\n\r\n    \r\n            // Get a reference to a mounted CardElement. Elements knows how\r\n            // to find your CardElement because there can only ever be one of\r\n            // each type of element.\r\n    \r\n    \r\n        }\r\n\r\n        \r\n        if(!hasError){\r\n            const createSubscription = CloudFunctions.httpsCallable('createSubscription');\r\n            createSubscription({\r\n                planId: selectedPlan.id,\r\n                accountId: userData.currentAccount.id,\r\n                paymentMethodId: paymentMethodId,\r\n                billing: {\r\n                    country: country,\r\n                    state: state\r\n                }\r\n            }).then(res => {\r\n                // physical page load to reload the account data\r\n                document.location = '/account/'+userData.currentAccount.id+'/';\r\n            }).catch(err => {\r\n                setProcessing(false);\r\n                setErrorMessage(err.message);\r\n            });\r\n        }else{\r\n            setProcessing(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card-deck mb-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-center\"><h3>{title}</h3></div>\r\n                            <div className=\"card-body\">\r\n                                {(userData.currentAccount.owner === authUser.user.uid)?(\r\n                                    <>\r\n                                        {errorMessage !== null && \r\n                                        <Alert type=\"danger\" message={errorMessage} dismissible={true} onDismiss={() => setErrorMessage(null)}></Alert>\r\n                                        }\r\n                                        {plans.length > 0 ? (\r\n                                            <div className=\"row justify-content-md-center\">\r\n                                            <div className=\"col col-sm-12 col-md-8 col-lg-8 col-xl-8\">\r\n\r\n                                            <div className=\"card-deck mb-5 text-center\">\r\n                                            {plans.map((plan,i) => \r\n                                                    <div className=\"card\" key={i+plan.id}>\r\n                                                        <div className=\"card-header\">\r\n                                                            <h4 className=\"my-0 font-weight-normal\">\r\n                                                                {plan.name}\r\n                                                            </h4>\r\n                                                            <h1 className=\"card-title\">\r\n                                                                ${plan.price}\r\n                                                                <small className=\"text-muted\">\r\n                                                                    /{plan.paymentCycle}\r\n                                                                </small>\r\n                                                            </h1>\r\n                                                        </div>\r\n                                                        <div className=\"card-body\">\r\n                                                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                                                                {plan.features.map((feature, i) => \r\n                                                                    <li key={i}><i className=\"fa fa-check text-success\"></i> {feature}</li>\r\n                                                                )}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                        <div className=\"card-footer bg-white\">\r\n                                                            {plan.current?(\r\n                                                                <button type=\"button\" className=\"btn btn-block btn-secondary\" disabled={true}>Current Plan</button>\r\n                                                            ):(\r\n                                                                <button type=\"button\" className={(plan.id!==selectedPlan.id)?\"btn btn-block btn-outline-success\":\"btn btn-block btn-success\"} onClick={() => {\r\n                                                                    for(let i=0; i<plans.length; i++){\r\n                                                                        if(plans[i].id === plan.id){\r\n                                                                            setSelectedPlan(plan);\r\n                                                                        }\r\n                                                                    }\r\n                                                                }}>{plan.id===selectedPlan.id && <><i className=\"fa fa-check\"></i> </>}{(plan.id!==selectedPlan.id)?\"Select\":\"Selected\"}</button>    \r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            </div>\r\n                                        \r\n                                            {selectedPlan.id !== 0 && selectedPlan.price > 0 && \r\n                                            <div className=\"card-deck\">\r\n                                                <div className=\"card mb-4\">\r\n                                                    <div className=\"card-header text-center\">\r\n                                                        <h3>Billing Details</h3>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label className=\"col-lg-3 col-form-label mt-2 text-lg-right\"><b>Country/Territory</b></label>\r\n                                                            <div className=\"col-lg-9 mt-2\">\r\n                                                                {countryError !== null && \r\n                                                                    <Alert type=\"danger\" message={countryError} dismissible={true} onDismiss={() => setCountryError(null)}></Alert>\r\n                                                                }\r\n                                                                <select className=\"form-control\" defaultValue={country} onChange={e => {\r\n                                                                    const countryCode = e.target.selectedOptions[0].value;\r\n                                                                    setCountry(countryCode);\r\n                                                                    setState(\"\");\r\n                                                                    setCountryError(null);\r\n                                                                }}>\r\n                                                                    <option value=''>-- Select a country --</option>\r\n                                                                    {Object.keys(countries).map((countryCode) => \r\n                                                                        <option value={countryCode} key={countryCode}>{countries[countryCode].name}</option>\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {countries[country] && countries[country].states &&\r\n                                                            <div className=\"form-group row\">\r\n                                                                <label className=\"col-lg-3 col-form-label mt-2 text-lg-right\"><b>State/Province</b></label>\r\n                                                                <div className=\"col-lg-9 mt-2\">\r\n                                                                    {stateError !== null && \r\n                                                                        <Alert type=\"danger\" message={stateError} dismissible={true} onDismiss={() => setStateError(null)}></Alert>\r\n                                                                    }\r\n                                                                    <select className=\"form-control\" defaultValue={state} onChange={e => {\r\n                                                                        setState(e.target.selectedOptions[0].value);\r\n                                                                        setStateError(null);\r\n                                                                    }}>\r\n                                                                        <option value=''>-- Select a state --</option>\r\n                                                                        {Object.keys(countries[country].states).map(stateCode => \r\n                                                                            <option value={stateCode} key={stateCode}>{countries[country].states[stateCode]}</option>\r\n                                                                        )}\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        }\r\n                                                        <div className=\"form-group row mb-0\">\r\n                                                            <label className=\"col-lg-3 col-form-label mt-2 text-lg-right\"><b>Credit/Debit Card</b></label>\r\n                                                            <div className=\"col-lg-9 mt-2\">\r\n                                                                {cardError !== null && \r\n                                                                    <Alert type=\"danger\" message={cardError} dismissible={true} onDismiss={() => setCardError(null)}></Alert>\r\n                                                                }\r\n                                                                <div className=\"form-control\">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                            {selectedPlan.id!==0 &&                                             \r\n                                                <button className=\"btn btn-lg btn-block btn-primary\" disabled={selectedPlan.id===0||processing?true:false} onClick={e => {\r\n                                                    subcribe(e);\r\n                                                }}>{processing?(<Loader text=\"Please wait while subscription being processed...\"></Loader>):(<>Subscribe</>)}</button>\r\n                                            }\r\n                                            </div>\r\n                                        </div>\r\n                                        ):(\r\n                                            <>\r\n                                                {(loading) ? (\r\n                                                    <Loader text=\"loading plans...\"></Loader>\r\n                                                ):(\r\n                                                    <div>No plan is found</div>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                ):(\r\n                                    <Alert type=\"danger\" message=\"Access Denied.\" dismissible={false} ></Alert>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Plans;\r\n","import React, {useState, useContext, useEffect} from \"react\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { Form, Field, Input } from '../../../../components/Form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from \"../../../../components/Alert\";\r\n\r\nconst NewAccount = () => {\r\n    const title = 'Create New Account';\r\n\r\n    const [accountName, setAccountName] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n\r\n    const [redirect, setRedirect] = useState(null);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    }, [setBreadcrumb, title]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {redirect === null && \r\n            <>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                {title}\r\n                            </div>\r\n                            {errorMessage !== null && \r\n                                <Alert type=\"danger\" message={errorMessage} dismissible={true} onDismiss={() => setErrorMessage(null)}></Alert>\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <Form handleSubmit={e =>{\r\n                                    e.preventDefault();\r\n                                    setInSubmit(true);\r\n                                    setErrorMessage(null);\r\n                                    const createAccount = CloudFunctions.httpsCallable('createAccount');\r\n                                    createAccount({\r\n                                        accountName: accountName.value,\r\n                                    }).then(response => {\r\n                                        const accountId = response.data.accountId;\r\n                                        setRedirect('/account/'+accountId+'/billing/plan');\r\n                                    }).catch(err => {\r\n                                        setErrorMessage(err.message);\r\n                                        setInSubmit(false);\r\n                                    })\r\n                                }}\r\n                                disabled={accountName.hasError || accountName.value===null || inSubmit}\r\n                                inSubmit={inSubmit}\r\n                                enableDefaultButtons={true}>\r\n                                    <Field label=\"Account Name\">\r\n                                        <Input type=\"text\" name=\"account-name\" maxLen={100} required={true} changeHandler={setAccountName} />\r\n                                    </Field>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n            {redirect !== null &&\r\n                <Redirect to={redirect}></Redirect>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default NewAccount;","import React, { useContext, useEffect } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Overview = () => {\r\n    const title = 'Overview';\r\n\r\n    const { userData } = useContext(AuthContext);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    \r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },      \r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    }, [userData, setBreadcrumb, title]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p>This is the overview of the account</p>\r\n                            {!userData.currentAccount.subscriptionStatus && \r\n                            <p>Account status is not active, <Link to={\"/account/\"+userData.currentAccount.id+\"/plan\"}>activate a plan here to continue</Link>.</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Overview;","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport UserAvatar from '../../../../components/UserAvatar';\r\nimport Alert from \"../../../../components/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserList = () => {\r\n    const title = 'Users';\r\n\r\n    const { userData } = useContext(AuthContext);\r\n    const mountedRef = useRef(true);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    const [users, setUsers] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb(\r\n            [\r\n                {\r\n                    to: \"/\",\r\n                    text: \"Home\",\r\n                    active: false\r\n                },\r\n                {\r\n                    to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                    text: userData.currentAccount.name,\r\n                    active: false\r\n                },      \r\n                {\r\n                    to: null,\r\n                    text: title,\r\n                    active: true\r\n                }\r\n            ]);\r\n        setError(null);\r\n        const getAccountUsers = CloudFunctions.httpsCallable('getAccountUsers');\r\n        getAccountUsers({\r\n            accountId: userData.currentAccount.id\r\n        }).then(res => {\r\n            if (!mountedRef.current) return null\r\n            res.data.forEach(record => {\r\n                record.lastLoginTime = new Date(record.lastLoginTime);\r\n            });\r\n            setUsers(res.data);\r\n        }).catch(err => {\r\n            if (!mountedRef.current) return null\r\n            setError(err.message);\r\n        });\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[userData, setBreadcrumb])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"text-right mb-3\">\r\n                        <Link to={\"/account/\"+userData.currentAccount.id+\"/users/add\"} className=\"btn btn-primary\"><i className=\"fa fa-plus\"></i> Add User</Link>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {error !== null && \r\n                                <Alert type=\"danger\" message={error} dismissible={true} onDismiss={() => setError(null)}></Alert>\r\n                            }\r\n                            {users === null ? (\r\n                                <Loader text=\"Loading users\" />\r\n                            ):(\r\n                                <table className=\"table table-responsive-sm table-hover table-outline mb-0\">\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Role</th>\r\n                                            <th>Last Login</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {users.map((user, i) => \r\n                                        <tr key={i}>\r\n                                            <th>\r\n                                                <div className=\"row col\">\r\n                                                    <UserAvatar className=\"c-avatar-img\" name={user.displayName} photoUrl={user.photoUrl} ></UserAvatar>\r\n                                                    <div className=\"pt-2 ml-1\">\r\n                                                        <strong>{user.displayName}</strong>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </th>\r\n                                            <td>{user.id===userData.currentAccount.owner?\"Owner\":(user.role.charAt(0).toUpperCase()+user.role.slice(1))}</td>\r\n                                            <td>{user.lastLoginTime.toLocaleTimeString()} {user.lastLoginTime.toLocaleDateString()}</td>\r\n                                            <td className=\"text-right\">\r\n                                                {user.id!==userData.currentAccount.owner && \r\n                                                    <Link className=\"btn btn-primary\" to={\"/account/\"+userData.currentAccount.id+\"/users/change/\"+user.id}>Change Role</Link>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport UserAvatar from '../../../../components/UserAvatar';\r\nimport Alert from \"../../../../components/Alert\";\r\nimport {Form, Field} from \"../../../../components/Form\";\r\n\r\nconst UserRole = () => {\r\n    const title = 'Change User Role';\r\n\r\n    const { userData } = useContext(AuthContext);\r\n    const { userId } = useParams();\r\n    const mountedRef = useRef(true);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n    const [selectedRole, setSelectedRole] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/users\",\r\n                text: 'Manage Users',\r\n                active: false\r\n            },    \r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n        setError(null);\r\n        const getAccountUser = CloudFunctions.httpsCallable('getAccountUser');\r\n        getAccountUser({\r\n            accountId: userData.currentAccount.id,\r\n            userId: userId\r\n        }).then(res => {\r\n            if (!mountedRef.current) return null\r\n            res.data.lastLoginTime = new Date(res.data.lastLoginTime);\r\n            setUser(res.data);\r\n        }).catch(err => {\r\n            if (!mountedRef.current) return null\r\n            setError(err.message);\r\n        });\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[userData, userId, setBreadcrumb])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {(userId !== userData.currentAccount.owner)?(\r\n                                <>\r\n                                    {success && \r\n                                        <Alert type=\"success\" message=\"User role is successfully updated.\" dismissible={true} onDismiss={() => setSuccess(false)}></Alert>\r\n                                    }\r\n                                    {error !== null && \r\n                                        <Alert type=\"danger\" message={error} dismissible={true} onDismiss={() => setError(null)}></Alert>\r\n                                    }\r\n                                    {user === null ? (\r\n                                        <Loader text=\"Loading user details\" />\r\n                                    ):(\r\n                                        <Form handleSubmit={e => {\r\n                                            e.preventDefault();\r\n                                            setError(null);\r\n                                            setSuccess(false);\r\n                                            setInSubmit(true);\r\n                                            const updateAccountUserRole = CloudFunctions.httpsCallable('updateAccountUserRole');\r\n                                            updateAccountUserRole({\r\n                                                accountId: userData.currentAccount.id,\r\n                                                userId: userId,\r\n                                                role: selectedRole\r\n                                            }).then(res => {\r\n                                                setInSubmit(false);\r\n                                                setSuccess(true);\r\n                                            }).catch(err => {\r\n                                                setInSubmit(false);\r\n                                                setError(err.message);\r\n                                            });\r\n                                        }}\r\n                                        disabled={selectedRole===null || inSubmit}\r\n                                        submitBtnStyle={(selectedRole!=='remove')?\"primary\":\"danger\"}\r\n                                        inSubmit={inSubmit}\r\n                                        enableDefaultButtons={true}\r\n                                        backToUrl={\"/account/\"+userData.currentAccount.id+\"/users\"}\r\n                                        >\r\n                                            <Field label=\"User Name\">\r\n                                                <div className=\"row col\">\r\n                                                    <UserAvatar name={user.displayName} photoUrl={user.photoUrl} className=\"c-avatar-img mr-2\"></UserAvatar>\r\n                                                    <div className=\"pt-2 ml-1\">{user.displayName}</div>\r\n                                                </div>\r\n                                            </Field>\r\n                                            <Field label=\"Last Login Time\">\r\n                                                <div className=\"my-1\">{user.lastLoginTime.toLocaleString()}</div>\r\n                                            </Field>\r\n                                            <Field label=\"Role\">\r\n                                                <select className=\"form-control col-md-6 col-sm-8\" defaultValue={user.role} onChange={e => {\r\n                                                    setSelectedRole(e.target.value);\r\n                                                }}>\r\n                                                    <option value=\"user\">user</option>\r\n                                                    <option value=\"admin\">admin</option>\r\n                                                    <option value=\"remove\">-- Remove Access --</option>\r\n                                                </select>\r\n                                            </Field>\r\n                                        </Form>\r\n                                    )}\r\n                                </>\r\n                            ):(\r\n                                <Alert type=\"danger\" message=\"Access Denied.\" dismissible={false} ></Alert>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UserRole;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport Alert from \"../../../../components/Alert\";\r\nimport {Form, Field, Input} from \"../../../../components/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../../../components/Loader\";\r\n\r\nconst AddUser = () => {\r\n    const title = 'Add User';\r\n\r\n    const { userData } = useContext(AuthContext);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n    const [emailAddress, setEmailAddress] = useState({\r\n        hasError: false,\r\n        error: null,\r\n        value: null\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n    const [selectedRole, setSelectedRole] = useState('user');\r\n    const [inviteDialog, setInviteDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/users\",\r\n                text: 'Manage Users',\r\n                active: false\r\n            },    \r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    }, [userData, setBreadcrumb, title]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {success?(\r\n                                <>\r\n                                    {inviteDialog?(\r\n                                        <Alert type=\"success\" message=\"The invite is sent to the email address.\" dismissible={false} onDismiss={() => setSuccess(false)}></Alert>\r\n                                    ):(\r\n                                        <Alert type=\"success\" message=\"The user is added to the account.\" dismissible={false} onDismiss={() => setSuccess(false)}></Alert>\r\n                                    )}\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                    {error !== null && \r\n                                        <Alert type=\"danger\" message={error} dismissible={true} onDismiss={() => setError(null)}></Alert>\r\n                                    }\r\n                                    {inviteDialog?(\r\n                                        <>\r\n                                            <div className=\"text-center\">The email is not registered by any existing user. Do you want to send an invite to the user?</div>\r\n                                            <div className=\"text-center mt-3\">\r\n                                                <button className=\"btn btn-primary mr-2\" disabled={inSubmit} onClick={e => {\r\n                                                    e.preventDefault();\r\n                                                    setInSubmit(true);\r\n                                                    const inviteEmailToAccount = CloudFunctions.httpsCallable('inviteEmailToAccount');\r\n                                                    inviteEmailToAccount({\r\n                                                        accountId: userData.currentAccount.id,\r\n                                                        email: emailAddress.value,\r\n                                                        role: selectedRole\r\n                                                    }).then(res => {\r\n                                                        setInSubmit(false);\r\n                                                        setSuccess(true);\r\n                                                    }).catch(err => {\r\n                                                        setError(err.message);\r\n                                                    });\r\n                                                }}>{inSubmit && <Loader />}\r\n                                                    Yes, send an invite</button>\r\n                                                <Link className={inSubmit?(\"btn btn-secondary ml-2 btn-disabled\"):(\"btn btn-secondary ml-2\")} disabled={inSubmit} to={\"/account/\"+userData.currentAccount.id+\"/users\"} onClick={e => {\r\n                                                    if(inSubmit){\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                }}>No</Link>\r\n                                            </div>\r\n                                        </>\r\n                                    ):(\r\n                                        <Form handleSubmit={e => {\r\n                                            e.preventDefault();\r\n                                            setError(null);\r\n                                            setSuccess(false);\r\n                                            setInSubmit(true);\r\n                                            const addUserToAccount = CloudFunctions.httpsCallable('addUserToAccount');\r\n                                            addUserToAccount({\r\n                                                accountId: userData.currentAccount.id,\r\n                                                email: emailAddress.value,\r\n                                                role: selectedRole\r\n                                            }).then(res => {\r\n                                                setInSubmit(false);\r\n                                                setSuccess(true);\r\n                                            }).catch(err => {\r\n                                                setInSubmit(false);\r\n                                                if(err.details && err.details.code === 'auth/user-not-found'){\r\n                                                    setInviteDialog(true);\r\n                                                    setInSubmit(false);\r\n                                                }else{\r\n                                                    setError(err.message);\r\n                                                }\r\n                                            });\r\n                                        }}\r\n                                        disabled={emailAddress.hasError || emailAddress.value===null || selectedRole===null || inSubmit}\r\n                                        submitBtnStyle={(selectedRole!=='remove')?\"primary\":\"danger\"}\r\n                                        inSubmit={inSubmit}\r\n                                        enableDefaultButtons={true}\r\n                                        backToUrl={\"/account/\"+userData.currentAccount.id+\"/users\"}\r\n                                        >\r\n                                            <Field label=\"Email Address\">\r\n                                                <Input type=\"email\" name=\"email-address\" hasError={emailAddress.hasError} error={emailAddress.error} minLen={5} maxLen={50} required={true} validRegex=\"^[a-zA-Z0-9-_+\\.]*@[a-zA-Z0-9-_\\.]*\\.[a-zA-Z0-9-_\\.]*$\" changeHandler={setEmailAddress} />\r\n                                            </Field>\r\n                                            <Field label=\"Role\">\r\n                                                <select className=\"form-control col-md-6 col-sm-8\" onChange={e => {\r\n                                                    setSelectedRole(e.target.value);\r\n                                                }}>\r\n                                                    <option value=\"user\">user</option>\r\n                                                    <option value=\"admin\">admin</option>\r\n                                                </select>\r\n                                            </Field>\r\n                                        </Form>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AddUser;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport Loader from \"../../../../components/Loader\";\r\nimport Alert from \"../../../../components/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Invite = () => {\r\n\r\n    const { code } = useParams();\r\n\r\n    const title = 'View Invite';\r\n\r\n    const [invite, setInvite] = useState(null); \r\n    const [error, setError] = useState(null);\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n        if(code){\r\n            let isSubscribed = true;\r\n            setError(null);\r\n            const getInvite = CloudFunctions.httpsCallable('getInvite');\r\n            getInvite({\r\n                inviteId: code\r\n            }).then(res => {\r\n                if(isSubscribed){\r\n                    setInvite(res.data);\r\n                }\r\n            }).catch(err => {\r\n                if(isSubscribed){\r\n                    setError(err.message);\r\n                }\r\n            });\r\n            return () => (isSubscribed = false);\r\n        }\r\n    }, [code, setBreadcrumb, title])\r\n\r\n    return (\r\n        <>\r\n            {success?(\r\n                <Redirect to={\"/account/\"+invite.accountId+\"/\"}></Redirect>\r\n            ):(\r\n                <>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"animated fadeIn\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    {title}\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {error !== null && \r\n                                        <Alert type=\"danger\" message={error} dismissible={true} onDismiss={() => setError(null)}></Alert>\r\n                                    }\r\n                                    {invite === null?(\r\n                                        <Loader text=\"Loading the invite...\"></Loader>\r\n                                    ):(\r\n                                        <>\r\n                                            <div className=\"text-center\">This invite will grant you access to <strong>{invite.accountName}</strong>. Do you want to accept it?</div>\r\n                                            <div className=\"text-center mt-3\">\r\n                                                <button className=\"btn btn-primary mr-2\" disabled={inSubmit} onClick={e => {\r\n                                                    e.preventDefault();\r\n                                                    setInSubmit(true);\r\n                                                    const acceptInvite = CloudFunctions.httpsCallable('acceptInvite');\r\n                                                    acceptInvite({\r\n                                                        inviteId: code\r\n                                                    }).then(res => {\r\n                                                        setSuccess(true);\r\n                                                    }).catch(err => {\r\n                                                        setError(err.message);\r\n                                                    });\r\n                                                }}>{inSubmit && <Loader />}\r\n                                                    Yes, accept the invite</button>\r\n                                                <Link className={inSubmit?(\"btn btn-secondary ml-2 btn-disabled\"):(\"btn btn-secondary ml-2\")} to={\"/\"} onClick={e => {\r\n                                                    if(inSubmit){\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                }}>Ignore</Link>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Invite;","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { FirebaseAuth } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport { currency } from \"../../../../inc/currency.json\";\r\n\r\nconst PaymentList = () => {\r\n    const title = 'Payment History';\r\n\r\n    const { userData, authUser } = useContext(AuthContext);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n    // document snapshots\r\n    const pageSize = 10;\r\n    const [qs, setQs] = useState(null);\r\n    const mountedRef = useRef(true);\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [toEnd, setToEnd] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getInvoices = (accountId, pageSize, lastDoc) => {\r\n        setLoading(true);\r\n        let records = [];\r\n        const collectionRef = FirebaseAuth.firestore().collection('accounts').doc(accountId).collection('invoices');\r\n        let query = collectionRef.orderBy('created', 'desc');\r\n        if(lastDoc){\r\n            query = query.startAfter(lastDoc);\r\n        }\r\n        query = query.limit(pageSize);\r\n        query.get().then(documentSnapshots => {\r\n            if (!mountedRef.current) return null\r\n            if(documentSnapshots.empty){\r\n                setToEnd(true);\r\n            }else{\r\n                documentSnapshots.forEach(doc => {\r\n                    records.push({\r\n                        'id': doc.id,\r\n                        'total': (Math.round(doc.data().total / 100)).toFixed(2),\r\n                        'subTotal': (Math.round(doc.data().subTotal / 100)).toFixed(2),\r\n                        'tax': (Math.round((doc.data().tax || 0) / 100)).toFixed(2),\r\n                        'amountPaid': (Math.round(doc.data().amountPaid / 100)).toFixed(2),\r\n                        'created': (new Date(doc.data().created * 1000)).toLocaleString(),\r\n                        'hostedInvoiceUrl': doc.data().hostedInvoiceUrl,\r\n                        'currency': doc.data().currency,\r\n                        'status': doc.data().status\r\n                    });\r\n                });\r\n                if(records.length > 0){\r\n                    setRows(rows => rows.concat(records));\r\n                    setQs(documentSnapshots);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: \"Billing\",\r\n                active: true\r\n            }\r\n        ]);\r\n        getInvoices(userData.currentAccount.id, pageSize);\r\n        return () => { \r\n            mountedRef.current = false\r\n        }\r\n    },[userData, setBreadcrumb]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"text-right mb-3\">\r\n                        {userData.currentAccount.owner === authUser.user.uid &&\r\n                            <>\r\n                                {userData.currentAccount.price > 0 && \r\n                                    <Link to={\"/account/\"+userData.currentAccount.id+\"/billing/payment-method\"} className=\"btn btn-primary mr-2\">Update Payment Method</Link>\r\n                                }\r\n                                <Link to={\"/account/\"+userData.currentAccount.id+\"/billing/plan\"} className=\"btn btn-primary mr-2\">Change Subscription Plan</Link>\r\n                                <Link to={\"/account/\"+userData.currentAccount.id+\"/billing/delete\"} className=\"btn btn-danger\">Delete Account</Link>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {rows.length > 0 &&\r\n                                <>\r\n                                    <table className=\"table table-responsive-sm table-hover table-outline\">\r\n                                        <thead className=\"thead-light\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Invoice ID</th>\r\n                                                <th scope=\"col\">Amount</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Invoice Date</th>\r\n                                                <th scope=\"col\">Invoice URL</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {rows.map((r,i) => \r\n                                            <tr key={r.id}>\r\n                                                <td><a className=\"btn btn-link\" rel=\"noreferrer\" href={r.hostedInvoiceUrl} target=\"_blank\">{r.id}</a></td>\r\n                                                <td>{currency[r.currency].sign}{r.total}</td>\r\n                                                <td>{r.status.toUpperCase()}</td>\r\n                                                <td>{r.created}</td>\r\n                                                <td><a href={r.hostedInvoiceUrl} rel=\"noreferrer\" target=\"_blank\" className=\"btn btn-info\">View Invoice</a></td>\r\n                                            </tr>\r\n                                        )}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </>\r\n                            }\r\n                            {loading?(\r\n                                <Loader text=\"Loading data...\"></Loader>\r\n                            ):(\r\n                                <>\r\n                                {toEnd?(\r\n                                    <span>End of all invoices</span>\r\n                                ):(\r\n                                    <button className=\"btn btn-primary\" onClick={e => {\r\n                                        getInvoices(userData.currentAccount.id, pageSize, qs.docs[qs.docs.length-1]);\r\n                                    }}>View More</button>\r\n                                )}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentList;","import React, {useState, useContext, useEffect} from \"react\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport Loader from '../../../../components/Loader';\r\nimport Alert from \"../../../../components/Alert\";\r\n\r\nconst PaymentMethod = () => {\r\n    const title = 'Update Payment Method';\r\n\r\n    const { userData, authUser } = useContext(AuthContext);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n\r\n    const [processing, setProcessing] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [cardError, setCardError] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const subcribe = async(event) => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n        setErrorMessage(null);\r\n        setSuccess(false);\r\n\r\n        let hasError = false;\r\n        let paymentMethodId = '';\r\n\r\n        setCardError(null);\r\n\r\n\r\n\r\n        // Get a reference to a mounted CardElement. Elements knows how\r\n        // to find your CardElement because there can only ever be one of\r\n        // each type of element.\r\n\r\n\r\n\r\n        \r\n        if(!hasError){\r\n            const updatePaymentMethod = CloudFunctions.httpsCallable('updatePaymentMethod');\r\n            updatePaymentMethod({\r\n                accountId: userData.currentAccount.id,\r\n                paymentMethodId: paymentMethodId\r\n            }).then(res => {\r\n                setSuccess(true);\r\n                setProcessing(false);\r\n            }).catch(err => {\r\n                setProcessing(false);\r\n                setErrorMessage(err.message);\r\n            });\r\n        }else{\r\n            setProcessing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/billing\",\r\n                text: 'Billing',\r\n                active: false\r\n            },   \r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    },[userData, setBreadcrumb, title])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"animated fadeIn\">\r\n                    {userData.currentAccount.price > 0 ? (\r\n                        <>\r\n                            <div className=\"card-deck mb-3\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\">{title}</div>\r\n                                    <div className=\"card-body\">\r\n                                        {(userData.currentAccount.owner === authUser.user.uid)?(\r\n                                            <>\r\n                                                {success && \r\n                                                <Alert type=\"success\" message=\"The payment method has been successfully updated.\" dismissible={true} onDismiss={() => setSuccess(false)}></Alert>\r\n                                                }\r\n                                                {errorMessage !== null && \r\n                                                <Alert type=\"danger\" message={errorMessage} dismissible={true} onDismiss={() => setErrorMessage(null)}></Alert>\r\n                                                }\r\n                                                <div className=\"row justify-content-md-center\">\r\n                                                    <div className=\"col col-sm-12 col-md-8 col-lg-8 col-xl-6\">\r\n                                                    <div className=\"card-deck\">\r\n                                                        <div className=\"card mb-4\">\r\n                                                            <div className=\"card-header text-center\">\r\n                                                                Credit or debit card\r\n                                                            </div>\r\n                                                            <div className=\"card-body\">\r\n                                                                <div className=\"row justify-content-md-center\">\r\n                                                                    <div className=\"col col-12\">\r\n                                                                        {cardError !== null && \r\n                                                                            <Alert type=\"danger\" message={cardError} dismissible={true} onDismiss={() => setCardError(null)}></Alert>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <button className=\"btn btn-lg btn-block btn-primary\" disabled={processing?true:false} onClick={e => {\r\n                                                        subcribe(e);\r\n                                                    }}>{processing?(<Loader text=\"Please wait...\"></Loader>):(<>Save</>)}</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        ):(\r\n                                            <Alert type=\"danger\" message=\"Access Denied.\" dismissible={false} ></Alert>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ):(\r\n                        <div>The account doesn't support payment methods.</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BreadcrumbContext } from '../../../../components/Breadcrumb';\r\nimport { AuthContext } from \"../../../../components/FirebaseAuth\";\r\nimport { CloudFunctions } from \"../../../../components/FirebaseAuth/firebase\";\r\nimport Alert from \"../../../../components/Alert\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport { currency } from \"../../../../inc/currency.json\";\r\n\r\nconst DeleteAccount = () => {\r\n    const title = 'Delete Account';\r\n\r\n    const { userData } = useContext(AuthContext);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n    const [inSubmit, setInSubmit] = useState(false);\r\n    const { setBreadcrumb } = useContext(BreadcrumbContext);\r\n\r\n    useEffect(() => {\r\n        setBreadcrumb([\r\n            {\r\n                to: \"/\",\r\n                text: \"Home\",\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/\",\r\n                text: userData.currentAccount.name,\r\n                active: false\r\n            },\r\n            {\r\n                to: \"/account/\"+userData.currentAccount.id+\"/billing\",\r\n                text: 'Billing',\r\n                active: false\r\n            },\r\n            {\r\n                to: null,\r\n                text: title,\r\n                active: true\r\n            }\r\n        ]);\r\n    },[userData,setBreadcrumb,title])\r\n\r\n    return (\r\n        <>\r\n            {success?(\r\n                <Redirect to=\"/\"></Redirect>\r\n            ):(\r\n                <>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"animated fadeIn\">\r\n                            <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        {title}\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        {error !== null && \r\n                                            <Alert type=\"danger\" message={error} dismissible={true} onDismiss={() => setError(null)}></Alert>\r\n                                        }\r\n                                        <p>Your current subscription period will end on {(new Date(userData.currentAccount.subscriptionCurrentPeriodEnd * 1000)).toLocaleDateString()}. The system will charge {currency[userData.currentAccount.currency].sign}{userData.currentAccount.price}/{userData.currentAccount.paymentCycle} to renew the subscription. Deleting the account will stop the subscription and no renewal payment will be charged.</p>\r\n                                        <p className=\"text-danger\">Are you sure you want to delete your account?</p>\r\n                                        <button className=\"btn btn-danger mr-3\" disabled={inSubmit?true:false} onClick={e => {\r\n                                            setInSubmit(true);\r\n                                            const cancelSubscription = CloudFunctions.httpsCallable('cancelSubscription');\r\n                                            cancelSubscription({\r\n                                                accountId: userData.currentAccount.id\r\n                                            }).then(res => {\r\n                                                setInSubmit(false);\r\n                                                setSuccess(true);\r\n                                            }).catch(err => {\r\n                                                setInSubmit(false);\r\n                                                setError(err.message);\r\n                                            })\r\n                                        }}>\r\n                                            {inSubmit && \r\n                                                <Loader />\r\n                                            }\r\n                                            Yes, I want to delete the account</button>\r\n                                        <Link className=\"btn btn-secondary\" to={\"/account/\"+userData.currentAccount.id+\"/billing\"}>No</Link>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthProvider } from './components/FirebaseAuth';\r\n\r\nimport PublicRouter from './components/routers/PublicRouter';\r\nimport PublicTemplate from './components/templates/PublicTemplate';\r\nimport AccountTemplate from './components/templates/AccountTemplate';\r\nimport ActiveAccountTemplate from './components/templates/ActiveAccountTemplate';\r\n\r\nimport AuthRouter from './components/routers/AuthRouter';\r\n\r\nimport SignIn from './pages/public/SignIn';\r\nimport Home from './pages/auth/Home';\r\nimport PageNotFound from './pages/public/PageNotFound';\r\nimport AppTemplate from './components/templates/AppTemplate';\r\nimport UserProfile from './pages/auth/user/UserProfile';\r\nimport UpdateEmail from './pages/auth/user/UpdateEmail';\r\nimport UpdateName from './pages/auth/user/UpdateName';\r\nimport VerifyEmail from './pages/auth/user/VerifyEmail';\r\nimport UpdatePassword from './pages/auth/user/UpdatePassword';\r\nimport UpdatePhone from './pages/auth/user/UpdatePhone';\r\nimport DeleteUser from './pages/auth/user/DeleteUser';\r\nimport ViewLogs from './pages/auth/user/ViewLogs';\r\nimport Plans from './pages/auth/accounts/Plans';\r\nimport NewAccount from './pages/auth/accounts/NewAccount';\r\n\r\n\r\n// load stripe\r\nimport Overview from './pages/auth/accounts/Overview';\r\nimport UserList from './pages/auth/accounts/UserList';\r\nimport UserRole from './pages/auth/accounts/UserRole';\r\nimport AddUser from './pages/auth/accounts/AddUser';\r\nimport Invite from './pages/auth/user/Invite';\r\nimport PaymentList from './pages/auth/accounts/PaymentList';\r\nimport PaymentMethod from './pages/auth/accounts/PaymentMethod';\r\nimport DeleteAccount from './pages/auth/accounts/DeleteAccount';\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t\t<AuthProvider>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/\" component={Home} template={AppTemplate} title=\"My Accounts\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/billing/plan\" component={Plans} template={AccountTemplate} title=\"Select Plan\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/billing/payment-method\" component={PaymentMethod} template={ActiveAccountTemplate} title=\"Update Payment Method\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/billing/delete\" component={DeleteAccount} template={ActiveAccountTemplate} title=\"Delete Account\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/users/change/:userId\" component={UserRole} template={ActiveAccountTemplate} title=\"Change Role\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/users\" component={UserList} template={ActiveAccountTemplate} title=\"Users\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/users/add\" component={AddUser} template={ActiveAccountTemplate} title=\"Add User\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/billing\" component={PaymentList} template={ActiveAccountTemplate} title=\"Billing\" role=\"admin\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/account/:accountId/\" component={Overview} template={ActiveAccountTemplate} title=\"Overview\" role=\"*\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/new-account\" component={NewAccount} template={AppTemplate} title=\"Create New Account\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile\" component={UserProfile} template={AppTemplate} title=\"User Profile\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/invite/:code\" component={Invite} template={AppTemplate} title=\"View Invite\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/update-email\" component={UpdateEmail} template={AppTemplate} title=\"Change Your Email\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/update-name\" component={UpdateName} template={AppTemplate} title=\"Change Your Name\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/verify-email\" component={VerifyEmail} template={AppTemplate} title=\"Verify Your Name\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/update-password\" component={UpdatePassword} template={AppTemplate} title=\"Change Your Password\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/update-phone\" component={UpdatePhone} template={AppTemplate} title=\"Change Your Phone Number\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/profile/delete\" component={DeleteUser} template={AppTemplate} title=\"Delete Your Account\" />\r\n\t\t\t\t\t\t<AuthRouter exact path=\"/user/log\" component={ViewLogs} template={AppTemplate} title=\"View Activity Logs\" />\r\n\t\t\t\t\t\t<PublicRouter exact path=\"/signin\" component={SignIn} template={PublicTemplate} title=\"Sign In\" />\r\n\t\t\t\t\t\t<PublicRouter component={PageNotFound} template={PublicTemplate} title=\"Page Not Found\" />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</AuthProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}